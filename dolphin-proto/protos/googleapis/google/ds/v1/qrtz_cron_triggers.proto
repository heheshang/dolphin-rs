syntax="proto3";

package qrtz_cron_triggers;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

message QrtzCronTriggersBean{

    string sched_name=1;
    string trigger_name=2;
    string trigger_group=3;
    string cron_expression=4;
    optional string time_zone_id=5;
}

// Generated according to https://cloud.google.com/apis/design/standard_methods
service QrtzCronTriggersBeanService {
  rpc ListQrtzCronTriggersBeans(ListQrtzCronTriggersBeansRequest) returns (ListQrtzCronTriggersBeansResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/QrtzCronTriggersBeans"
    };
  }

  rpc GetQrtzCronTriggersBean(GetQrtzCronTriggersBeanRequest) returns (QrtzCronTriggersBean) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=QrtzCronTriggersBeans/*}"
    };
  }

  rpc CreateQrtzCronTriggersBean(CreateQrtzCronTriggersBeanRequest) returns (QrtzCronTriggersBean) {
    option (google.api.http) = {
      post: "/v1alpha1/QrtzCronTriggersBeans"
      body: "QrtzCronTriggersBean"
    };
  }

  rpc UpdateQrtzCronTriggersBean(UpdateQrtzCronTriggersBeanRequest) returns (QrtzCronTriggersBean) {
    option (google.api.http) = {
      patch: "/v1alpha1/{QrtzCronTriggersBean.name=QrtzCronTriggersBeans/*}"
      body: "QrtzCronTriggersBean"
    };
  }

  rpc DeleteQrtzCronTriggersBean(DeleteQrtzCronTriggersBeanRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=QrtzCronTriggersBeans/*}"
    };
  }
}

// message QrtzCronTriggersBean {
// ! This should be defined elsewhere
// }

message ListQrtzCronTriggersBeansRequest {
  // The parent resource name, for example, "shelves/shelf1"
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListQrtzCronTriggersBeansResponse {
  // The field name should match the noun "QrtzCronTriggersBean" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated QrtzCronTriggersBean QrtzCronTriggersBeans = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetQrtzCronTriggersBeanRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateQrtzCronTriggersBeanRequest {
  // The parent resource name where the QrtzCronTriggersBean is to be created.
  string parent = 1;

  // The QrtzCronTriggersBean id to use for this QrtzCronTriggersBean.
  string QrtzCronTriggersBean_id = 2;

  // The QrtzCronTriggersBean resource to create.
  // The field name should match the Noun in the method name.
  QrtzCronTriggersBean QrtzCronTriggersBean = 3;
}

message UpdateQrtzCronTriggersBeanRequest {
  // The QrtzCronTriggersBean resource which replaces the resource on the server.
  QrtzCronTriggersBean QrtzCronTriggersBean = 1;

  // The update mask applies to the resource. For the `google.protobuf.FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteQrtzCronTriggersBeanRequest {
  // The resource name of the QrtzCronTriggersBean to be deleted.
  string name = 1;
}
