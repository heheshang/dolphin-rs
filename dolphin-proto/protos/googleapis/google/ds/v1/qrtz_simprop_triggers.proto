
syntax = "proto3";

package qrtz_simprop_triggers;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";



message QrtzSimpropTriggers {

    string sched_name=1;
    string trigger_name=2;
    string trigger_group=3;
    optional string str_prop_1=4;
    optional string str_prop_2=5;
    optional string str_prop_3=6;
    optional int32 int_prop_1=7;
    optional int32 int_prop_2=8;
    optional int64 long_prop_1=9;
    optional int64 long_prop_2=10;
    optional double dec_prop_1=11;
    optional double  dec_prop_2=12;
    bool bool_prop_1=13;
    bool bool_prop_2=14;
}




// Generated according to https://cloud.google.com/apis/design/standard_methods
service QrtzSimpropTriggersService {
  rpc ListQrtzSimpropTriggerss(ListQrtzSimpropTriggerssRequest) returns (ListQrtzSimpropTriggerssResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/QrtzSimpropTriggerss"
    };
  }

  rpc GetQrtzSimpropTriggers(GetQrtzSimpropTriggersRequest) returns (QrtzSimpropTriggers) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=QrtzSimpropTriggerss/*}"
    };
  }

  rpc CreateQrtzSimpropTriggers(CreateQrtzSimpropTriggersRequest) returns (QrtzSimpropTriggers) {
    option (google.api.http) = {
      post: "/v1alpha1/QrtzSimpropTriggerss"
      body: "QrtzSimpropTriggers"
    };
  }

  rpc UpdateQrtzSimpropTriggers(UpdateQrtzSimpropTriggersRequest) returns (QrtzSimpropTriggers) {
    option (google.api.http) = {
      patch: "/v1alpha1/{QrtzSimpropTriggers.name=QrtzSimpropTriggerss/*}"
      body: "QrtzSimpropTriggers"
    };
  }

  rpc DeleteQrtzSimpropTriggers(DeleteQrtzSimpropTriggersRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=QrtzSimpropTriggerss/*}"
    };
  }
}

// message QrtzSimpropTriggers {
// ! This should be defined elsewhere
// }

message ListQrtzSimpropTriggerssRequest {
  // The parent resource name, for example, "shelves/shelf1"
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListQrtzSimpropTriggerssResponse {
  // The field name should match the noun "QrtzSimpropTriggers" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated QrtzSimpropTriggers QrtzSimpropTriggerss = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetQrtzSimpropTriggersRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateQrtzSimpropTriggersRequest {
  // The parent resource name where the QrtzSimpropTriggers is to be created.
  string parent = 1;

  // The QrtzSimpropTriggers id to use for this QrtzSimpropTriggers.
  string QrtzSimpropTriggers_id = 2;

  // The QrtzSimpropTriggers resource to create.
  // The field name should match the Noun in the method name.
  QrtzSimpropTriggers QrtzSimpropTriggers = 3;
}

message UpdateQrtzSimpropTriggersRequest {
  // The QrtzSimpropTriggers resource which replaces the resource on the server.
  QrtzSimpropTriggers QrtzSimpropTriggers = 1;

  // The update mask applies to the resource. For the `FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteQrtzSimpropTriggersRequest {
  // The resource name of the QrtzSimpropTriggers to be deleted.
  string name = 1;
}
