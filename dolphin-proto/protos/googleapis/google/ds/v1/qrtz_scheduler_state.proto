
syntax = "proto3";

package qrtz_scheduler_state;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

message QrtzSchedulerStateBean {
    string  sched_name=1;
    string instance_name=2;
    int64 last_checkin_time=3;
    int64 checkin_interval=4;

}
// Generated according to https://cloud.google.com/apis/design/standard_methods
service QrtzSchedulerStateBeanService {
  rpc ListQrtzSchedulerStateBeans(ListQrtzSchedulerStateBeansRequest) returns (ListQrtzSchedulerStateBeansResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/QrtzSchedulerStateBeans"
    };
  }

  rpc GetQrtzSchedulerStateBean(GetQrtzSchedulerStateBeanRequest) returns (QrtzSchedulerStateBean) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=QrtzSchedulerStateBeans/*}"
    };
  }

  rpc CreateQrtzSchedulerStateBean(CreateQrtzSchedulerStateBeanRequest) returns (QrtzSchedulerStateBean) {
    option (google.api.http) = {
      post: "/v1alpha1/QrtzSchedulerStateBeans"
      body: "QrtzSchedulerStateBean"
    };
  }

  rpc UpdateQrtzSchedulerStateBean(UpdateQrtzSchedulerStateBeanRequest) returns (QrtzSchedulerStateBean) {
    option (google.api.http) = {
      patch: "/v1alpha1/{QrtzSchedulerStateBean.name=QrtzSchedulerStateBeans/*}"
      body: "QrtzSchedulerStateBean"
    };
  }

  rpc DeleteQrtzSchedulerStateBean(DeleteQrtzSchedulerStateBeanRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=QrtzSchedulerStateBeans/*}"
    };
  }
}

// message QrtzSchedulerStateBean {
// ! This should be defined elsewhere
// }

message ListQrtzSchedulerStateBeansRequest {
  // The parent resource name, for example, "shelves/shelf1"
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListQrtzSchedulerStateBeansResponse {
  // The field name should match the noun "QrtzSchedulerStateBean" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated QrtzSchedulerStateBean QrtzSchedulerStateBeans = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetQrtzSchedulerStateBeanRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateQrtzSchedulerStateBeanRequest {
  // The parent resource name where the QrtzSchedulerStateBean is to be created.
  string parent = 1;

  // The QrtzSchedulerStateBean id to use for this QrtzSchedulerStateBean.
  string QrtzSchedulerStateBean_id = 2;

  // The QrtzSchedulerStateBean resource to create.
  // The field name should match the Noun in the method name.
  QrtzSchedulerStateBean QrtzSchedulerStateBean = 3;
}

message UpdateQrtzSchedulerStateBeanRequest {
  // The QrtzSchedulerStateBean resource which replaces the resource on the server.
  QrtzSchedulerStateBean QrtzSchedulerStateBean = 1;

  // The update mask applies to the resource. For the `google.protobuf.FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteQrtzSchedulerStateBeanRequest {
  // The resource name of the QrtzSchedulerStateBean to be deleted.
  string name = 1;
}
