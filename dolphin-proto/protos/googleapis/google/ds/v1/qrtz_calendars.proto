syntax="proto3";

package qrtz_calendars;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

message QrtzCalendarBean{
    string sched_name=1;
    string calendar_name=2;
    bytes calendar=3;
}


// Generated according to https://cloud.google.com/apis/design/standard_methods
service QrtzCalendarBeanService {
  rpc ListQrtzCalendarBeans(ListQrtzCalendarBeansRequest) returns (ListQrtzCalendarBeansResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/QrtzCalendarBeans"
    };
  }

  rpc GetQrtzCalendarBean(GetQrtzCalendarBeanRequest) returns (QrtzCalendarBean) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=QrtzCalendarBeans/*}"
    };
  }

  rpc CreateQrtzCalendarBean(CreateQrtzCalendarBeanRequest) returns (QrtzCalendarBean) {
    option (google.api.http) = {
      post: "/v1alpha1/QrtzCalendarBeans"
      body: "QrtzCalendarBean"
    };
  }

  rpc UpdateQrtzCalendarBean(UpdateQrtzCalendarBeanRequest) returns (QrtzCalendarBean) {
    option (google.api.http) = {
      patch: "/v1alpha1/{QrtzCalendarBean.name=QrtzCalendarBeans/*}"
      body: "QrtzCalendarBean"
    };
  }

  rpc DeleteQrtzCalendarBean(DeleteQrtzCalendarBeanRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=QrtzCalendarBeans/*}"
    };
  }
}

// message QrtzCalendarBean {
// ! This should be defined elsewhere
// }

message ListQrtzCalendarBeansRequest {
  // The parent resource name, for example, "shelves/shelf1"
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListQrtzCalendarBeansResponse {
  // The field name should match the noun "QrtzCalendarBean" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated QrtzCalendarBean QrtzCalendarBeans = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetQrtzCalendarBeanRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateQrtzCalendarBeanRequest {
  // The parent resource name where the QrtzCalendarBean is to be created.
  string parent = 1;

  // The QrtzCalendarBean id to use for this QrtzCalendarBean.
  string QrtzCalendarBean_id = 2;

  // The QrtzCalendarBean resource to create.
  // The field name should match the Noun in the method name.
  QrtzCalendarBean QrtzCalendarBean = 3;
}

message UpdateQrtzCalendarBeanRequest {
  // The QrtzCalendarBean resource which replaces the resource on the server.
  QrtzCalendarBean QrtzCalendarBean = 1;

  // The update mask applies to the resource. For the `google.protobuf.FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteQrtzCalendarBeanRequest {
  // The resource name of the QrtzCalendarBean to be deleted.
  string name = 1;
}
